/**
 * SearchTag automatically generated by SDKgen please do not edit this file manually
 * {@link https://sdkgen.app}
 */

import {TagAbstract, HttpRequest} from "sdkgen-client"
import {ClientException, UnknownStatusCodeException} from "sdkgen-client";

import {Errors} from "./Errors";
import {ErrorsException} from "./ErrorsException";
import {Fields} from "./Fields";
import {Pagination} from "./Pagination";
import {TweetCollection} from "./TweetCollection";

export class SearchTag extends TagAbstract {
    /**
     * @returns {Promise<TweetCollection>}
     * @throws {ErrorsException}
     * @throws {ClientException}
     */
    public async getRecent(query?: string, sortOrder?: string, expansions?: string, pagination?: Pagination, fields?: Fields): Promise<TweetCollection> {
        const url = this.parser.url('/2/tweets/search/recent', {
        });

        let request: HttpRequest = {
            url: url,
            method: 'GET',
            headers: {
            },
            params: this.parser.query({
                'query': query,
                'sort_order': sortOrder,
                'expansions': expansions,
                'pagination': pagination,
                'fields': fields,
            }, [
                'pagination',
                'fields',
            ]),
        };

        const response = await this.httpClient.request(request);
        if (response.ok) {
            return await response.json() as TweetCollection;
        }

        const statusCode = response.status;
        if (statusCode >= 0 && statusCode <= 999) {
            throw new ErrorsException(await response.json() as Errors);
        }

        throw new UnknownStatusCodeException('The server returned an unknown status code: ' + statusCode);
    }



}
